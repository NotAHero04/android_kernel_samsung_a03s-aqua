name: Build CI

on:
  push:
    branches:    
      - 'main'
      - 'dev'

  pull_request:
    branches:    
      - 'main'
      - 'dev'
  workflow_dispatch:

jobs:
    vanilla-kernel:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4

        - name: Download requirements tools
          run: | 
              sudo apt-get update
              sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev libc6-dev-i386 libncurses5 x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig libssl-dev bc -y

        - name: Download toolchain
          run: |
              bash build.sh clang 
              bash build.sh gcc

        - name: Prepare environment for building
          run: bash build.sh prepare

        - name: Build Kernel
          run: bash build.sh build

        - name: Repack with AnyKernel3
          run: bash build.sh anykernel3

        - name: Upload Compressed Gzip Kernel Image
          uses: actions/upload-artifact@v4
          with:
            name: Vanilla Compressed Gzip Kernel Image
            path: out/arch/arm64/boot/Image.gz
            compression-level: 9

        - name: Upload Flashable Zip
          uses: actions/upload-artifact@v4
          with:
            name: Vanilla Flashable Zip 
            path: AnyKernel3/UPDATE-AnyKernel3.zip
            compression-level: 9

    kernelsu-kernel:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4

        - name: Download requirements tools
          run: | 
              sudo apt-get update
              sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev libc6-dev-i386 libncurses5 x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig libssl-dev bc -y

        - name: Download toolchain
          run: |
            bash build.sh clang 
            bash build.sh gcc

        - name: Apply KernelSU patch
          run: bash build.sh kernelsu

        - name: Prepare environment for building
          run: bash build.sh prepare

        - name: Build Kernel
          run: bash build.sh build

        - name: Repack with AnyKernel3
          run: bash build.sh anykernel3

        - name: Upload Compressed Gzip Kernel Image
          uses: actions/upload-artifact@v4
          with:
            name: KernelSU Compressed Gzip Kernel Image
            path: out/arch/arm64/boot/Image.gz
            compression-level: 9

        - name: Upload Flashable Zip
          uses: actions/upload-artifact@v4
          with:
            name: KernelSU Flashable Zip 
            path: AnyKernel3/UPDATE-AnyKernel3.zip
            compression-level: 9

    publish-packages:
        needs: [vanilla-kernel, kernelsu-kernel]
        runs-on: ubuntu-latest
        steps:
        - uses: actions/download-artifact@v4

        - name: Preparing file before uploading
          run: |
              mv "KernelSU Flashable Zip/UPDATE-AnyKernel3.zip" A03s-AnyKernel3-KernelSU.zip
              mv "Vanilla Flashable Zip/UPDATE-AnyKernel3.zip" A03s-AnyKernel3-Vannila.zip

        #- name: Upload file to sourceforge
          #uses: appleboy/scp-action@v0.1.7
          #with:
            #host: frs.sourceforge.net
            #username: ${{ secrets.USERNAME }}
            #key: ${{ secrets.KEY }}
            #source: "tests/a.txt,tests/b.txt"
            #target: /home/frs/project/a03s-ota/"Aqua Kernel"/{branch}
